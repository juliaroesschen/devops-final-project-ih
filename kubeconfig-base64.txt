apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRDMrUWFTOUxGWXd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBME1Ea3dOelUzTXpCYUZ3MHpOVEEwTURjd09EQXlNekJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURkUEwvOHA0WFRldHdCclJ0dzVGcjFXV3pZMlgvM1VRZEtOUUVzYWxPL1FyeDY2ZTFPbnRqTUlMMEQKKzBiQkpTOTBUR0ppL3M4WlU3K3o0V2hzVHFtVXoyenpJblMwd3puZkFySFpBaG1WeTVFTFVUSXc0R0VzTG1TbwovdmJhQnpwV1F5RVh4czdMam1QYVJxKzJkR0JmR0QzQ01LaHhYSDRCempEOE0wd3U5cjdubm9idElkbkwxQkFCCmt2QmU3RWJST3dZbE84bzkwYWRUTVhiL2k2ZEJWdXlXaHJ2VkprQmJrL3lnQU9XNXNtWW9oay9IdlJBTndLK0IKSFBsaUJ6OXltRS8ySWxTb053MitTQ1U3QkNiZzA5ZUQrNm5aY0VraDI3OWVNcWI3NFgxaDcwcXVqd0xhK2FqRwp0b0Ivd1lCbTZPUW0vaEU4SDBCK0VRM1U1K2laQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRNmM5bVVvMG1yNHNSeTBmSUJrSmxLRkxUVEl6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3A5Q2Z4WDlPNwo5K3J5TkFDWmsxbEdUcUFZa3BUK1ZRczhHVGZJL3lWL0hOb1dUUGVSbVowcklEbVNIcW9ORkVVVFBzSnVhQ1dVCmpKcDVmTEZ5NnpkcEVJSG10cG1uaWtUekMwVHF3QUhYUkxzWkxUZGpZKzhlSlBUSFBKS0FLUnBhMDZxaXU2K2QKVWNzbys3Q3N0V1EyT0tTbTZKeFQ2N2NaMmVCSnNOellSa1pIVkZqN2tpUUI5V1kvR0ExMHlRSlFlTHVPOFF5TQpWM3BZV1ViTC9JVlFlaCtybTMzMWovaHB2YWxzckdBMzNSU0hYOTM1TDNwU2l5UHFTSFVicVliWHZYeVJleVB4ClhNMWdiVStHQVBJc3pYYlFGejgvM0RuM3d3bC9yZ0tLRGlsMHYvQnh6eCszVXJVNzlOaTlETWRPMmg2MC9QMzAKMkp2aTJwZ0lJT3RGCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://C0279BD26DF0361E1D07E9DE966F4192.gr7.ap-northeast-3.eks.amazonaws.com
  name: julia-eks-monitoring.ap-northeast-3.eksctl.io
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJR0RkR3IzcnE1LzB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek16RXdPVEUyTlRCYUZ3MHpOVEF6TWprd09USXhOVEJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURqMVFKNm9nZTBBUVUvYXhuNHV1cFlzaGk2SjFFcVRXckhWeTVvNGt0OG5WUUlRdnYyQ3Z2RnBmTUMKWjNvNi9YdWhaRExobm5rVkgrdG9ySHJFTHlGZGkwWk1paXJndk9hRFRiZGFFMXdWNlRWcHk4VHVHOEo1am5ROAptU0tUWE96UWY4MnlGOW54Yi9Pamhma2l5bVVOWkxWaUhVajBneEx1WkQ3Q2doVUFsbEFRQ05zdnk3TVBHeHUwCnBIS3NPNnFSczd5N0RMc3BMenlIMjQrZ3lJUG5VZk43TG5GL090OVpYQ1ErWUhXSXEra3kyRzRBRGdOdnpLSGEKUUxCU3BnQ3NmakRZT2FlNm9qdUVZKzEvUnFpOWNKQVhaUE1TMDNicERnT211TVoyTDlXMTRiMW5lTWFtSTJzRgpLOXJOcTZ3UVRyTTZiVmNHVUw0RkdmODl1dzNCQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUWDdrS0pOREp3eUY3U1A3VnZWOUQxLytWS0lUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQm1vOVd2bFpyWgpuWklIT1Vnc1lnN0FpOEtTUnVoOU50YkpRVEkxTk5KREVoU2ZDTWpxNUVpdEFVWlYzQjdFTklrSXMwZy92YXppCmp1ZUFEbHlvTWt0NDc1Zkx0a0poZnE4aERjYm5zVjFGQnJaTkwza3JPWE9MNHRKZDI1QjJvalVOSEFXbHBKelYKRUgyUnFnRC96VFd6WXB4Q21EdFUrb2Q3NkRleFIzQllvaDgzbi9sNk9WZ2pBcjh5ZG5ZdUl5Tml6Wlg4RzgyNQpDSnhEckt0ejM0MkdvdXdoR3ZxSERSa2p5WVRYVlBtVENhVlVJRDltV0NOSmp0VjZFa0l2cVVNeWc5RWtnaXdhCmM4RG5UN3Y0TW5QeHNUb25XQW1ZcTI3cXVzRlU0RG0rSkN1SlQ4SEFQOGhRZ2Q4UmswWEgydHRwbG5WeWhHOXYKTFZ0YnUxbzZtdDFQCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://650042625D6F7D77616C491047584644.gr7.ap-southeast-2.eks.amazonaws.com
  name: julia-voting-app-cluster.ap-southeast-2.eksctl.io
- cluster:
    certificate-authority: /Users/juliarosschen/.minikube/ca.crt
    extensions:
    - extension:
        last-update: Tue, 25 Mar 2025 11:46:49 CET
        provider: minikube.sigs.k8s.io
        version: v1.35.0
      name: cluster_info
    server: https://127.0.0.1:58476
  name: minikube
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJU3NzaFBxZkdkVnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1qVXhOREEwTkRaYUZ3MHpOVEF6TWpNeE5EQTVORFphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURLTllJaFc3aWFpVGxGUllwaEZuL2hHUjdRbkdiM2xod0pXSUVWUFh4RUI2YjBodStwN1ZacDV2RWEKQlQxU2QzZkM1UWNQMlNjQ1lnTit1MWVkazVzZTU1WXc4QUU0VWJ2ZFRmdFcxQTJUSTZEN1dCV20yNGQ4MkZ2aApwNHREbkU4clZjc1M0dWgrZ1ZzbXlpWnJXWXhEU0tLaFJYYjlwQllDUVdPQ3poU01HNUxWN2NkTkR0bHhGZTZSCnVHTmlETUwzMGxlNG5PYSs3TWRWZTdjZUFDeHlKMUVFU2dZUFZOUlg1c3d2MEVoQXh2dS85K2VxOG9hSnVSRUcKV1Vpd2xlNk1NVHMyMFlaREplZDJoZkJRMHBTbzFEZnFpUS9yWERWYW40UUcvOHEwaDEvaE01N0tEUWtMdDlheApOQ3J0VXRZL0dteFJudEZtNVpPQU5hNEl5V0JuQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSMjFDOWtKYTg1WlQrMFU0WjNxbmpxSEIyeHhUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUdPQU1YZ0RyQwp5V0lXTjBaTzVyZ2JUVndSekRWSlZ6TW5mMkw1WGNMeUMwRm1BcS9YUW05bHFlQXFKd0Nzb2VlOTBhL0lNY3hTCnpNM0R6UFd0bkxpL2t0ZFNzNEhueVI5R2RKSE50UitrTEQ5S2VBK0hBb2hrQkFIVmxuR3RIaHNHZi9RclNxTE8KUFlXRzV4VWpYWVlWME5hbnM2dmE2cUNBNEprM0tOWWxWdXVXMGdzeVJkSSt3L0k0QWFuMC95TkIwZGFIZ29saQpjME9LK0VmT2pTOUdqYjVvOXplMXc4Ym1FUnNHQ3pZV2lrL0NYUW5CTCt4bmFySW00eTR0aVZONE96SDI0WXZkCnZPaUQ4MUp4VEh6MWFXUy9zM2krRm9zblJta04xVFRreHowL3JlWU5Xcm05QUlQYUdzRWFycXl2L05jN2EzTS8KbDVteTV3RGlwWkN1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://40F413887164B41617695164DCA770D4.gr7.ap-northeast-2.eks.amazonaws.com
  name: my-eks-lab.ap-northeast-2.eksctl.io
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQlE5QUN3bXk2MGN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1qVXhNVFExTWpOYUZ3MHpOVEF6TWpNeE1UVXdNak5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM1Sjl2TGdYVU9tL3puWXlJQkNUYTdreHNZT0h5WnZGd2hzWlNZRnBCZ09ZeHArSGN6eW10Wml0TnkKdHlQYzBIKzExWnc5eFhhQUdqUFlKcEdDbDFJUER3RU5vSThPS1dGN1I2L2ovanVOTG1XMlF4THRkZXRXVnpKYgpqU1hiRW4vTC8rMTlIWnBLVVRheUFkMk5GTUVIRXQrMEx2SnZTN2xhTnRwQXFUNEVnY2drWEFaR04vWlZISUF1CjVBTUVZeStld09UckdzRjJXd2dPWksxUXdXcFZSOWUwaWloa2xBNDJ4RUVSZmwrZGNXeG5XL3BHb0V2dFh6RlQKdmR0cFhRdFh4a3BHQmhrVFc4ZHROU1YvWEY4VytvSEJyTEYxYmhRNlNsRDNPbURFWjZac0tSazRYZ29ZSHZsegpFdUFMWitXSitFa002Z0RjQkc5QXhZd3BzL2tSQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRQi9vYlA5NEc1N2xHUFpDMkdlN1l4eWw1UEtqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlVRZGcyRmpaZQp6bjkxc0t4TW56NjN5QWVoR1NFems1S1JMbElDNmttMGpBSUV5VVRMcm4zZXZYL3huNlVRWkRubGhwZ3lncE43ClpLdHc0OGcvS0UxNFlSd0xtb2I0UHhFQWxQQ0NkejBZUWVQc1o0cG5DcWNJbTZtSXZtS1d3Z2JENytFbHlkVDUKVlJKamdMSlJDQUZOK0o0TmFTTzVnb09KbTlzMVF5RG5mNUQ4QThxS1ZpcTJMcVBRUTlMdUJIWkpGV29mQklMaApWZVpYYzk2a1o0eFNQeE9QSHhDbktxc2k4VXpVWExPR1hqdTRhMG42am9MbDdmdWZGSmRhdmRIQnBSenNvc0Y3CnV6d0o0dXFEZmt5dkd2ckt0UG1CQUV1QzVVRVg0bURVaFJFTWtVMmtCb2w2MTNkQldIdmVtLzV0V0xTK3MxZ1gKRDdBY2swSW1VYzBHCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://B0280014FCDD1E82983193FA1A2B5AF7.sk1.ap-northeast-3.eks.amazonaws.com
  name: arn:aws:eks:ap-northeast-3:438465169137:cluster/my-eks-prod
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRDMrUWFTOUxGWXd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBME1Ea3dOelUzTXpCYUZ3MHpOVEEwTURjd09EQXlNekJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURkUEwvOHA0WFRldHdCclJ0dzVGcjFXV3pZMlgvM1VRZEtOUUVzYWxPL1FyeDY2ZTFPbnRqTUlMMEQKKzBiQkpTOTBUR0ppL3M4WlU3K3o0V2hzVHFtVXoyenpJblMwd3puZkFySFpBaG1WeTVFTFVUSXc0R0VzTG1TbwovdmJhQnpwV1F5RVh4czdMam1QYVJxKzJkR0JmR0QzQ01LaHhYSDRCempEOE0wd3U5cjdubm9idElkbkwxQkFCCmt2QmU3RWJST3dZbE84bzkwYWRUTVhiL2k2ZEJWdXlXaHJ2VkprQmJrL3lnQU9XNXNtWW9oay9IdlJBTndLK0IKSFBsaUJ6OXltRS8ySWxTb053MitTQ1U3QkNiZzA5ZUQrNm5aY0VraDI3OWVNcWI3NFgxaDcwcXVqd0xhK2FqRwp0b0Ivd1lCbTZPUW0vaEU4SDBCK0VRM1U1K2laQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRNmM5bVVvMG1yNHNSeTBmSUJrSmxLRkxUVEl6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3A5Q2Z4WDlPNwo5K3J5TkFDWmsxbEdUcUFZa3BUK1ZRczhHVGZJL3lWL0hOb1dUUGVSbVowcklEbVNIcW9ORkVVVFBzSnVhQ1dVCmpKcDVmTEZ5NnpkcEVJSG10cG1uaWtUekMwVHF3QUhYUkxzWkxUZGpZKzhlSlBUSFBKS0FLUnBhMDZxaXU2K2QKVWNzbys3Q3N0V1EyT0tTbTZKeFQ2N2NaMmVCSnNOellSa1pIVkZqN2tpUUI5V1kvR0ExMHlRSlFlTHVPOFF5TQpWM3BZV1ViTC9JVlFlaCtybTMzMWovaHB2YWxzckdBMzNSU0hYOTM1TDNwU2l5UHFTSFVicVliWHZYeVJleVB4ClhNMWdiVStHQVBJc3pYYlFGejgvM0RuM3d3bC9yZ0tLRGlsMHYvQnh6eCszVXJVNzlOaTlETWRPMmg2MC9QMzAKMkp2aTJwZ0lJT3RGCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://C0279BD26DF0361E1D07E9DE966F4192.gr7.ap-northeast-3.eks.amazonaws.com
  name: arn:aws:eks:ap-northeast-3:438465169137:cluster/julia-eks-monitoring
contexts:
- context:
    cluster: minikube
    extensions:
    - extension:
        last-update: Tue, 25 Mar 2025 11:46:49 CET
        provider: minikube.sigs.k8s.io
        version: v1.35.0
      name: context_info
    namespace: default
    user: minikube
  name: minikube
- context:
    cluster: julia-eks-monitoring.ap-northeast-3.eksctl.io
    user: user1@julia-eks-monitoring.ap-northeast-3.eksctl.io
  name: user1@julia-eks-monitoring.ap-northeast-3.eksctl.io
- context:
    cluster: julia-voting-app-cluster.ap-southeast-2.eksctl.io
    user: user1@julia-voting-app-cluster.ap-southeast-2.eksctl.io
  name: user1@julia-voting-app-cluster.ap-southeast-2.eksctl.io
- context:
    cluster: my-eks-lab.ap-northeast-2.eksctl.io
    user: user1@my-eks-lab.ap-northeast-2.eksctl.io
  name: user1@my-eks-lab.ap-northeast-2.eksctl.io
- context:
    cluster: arn:aws:eks:ap-northeast-3:438465169137:cluster/my-eks-prod
    user: arn:aws:eks:ap-northeast-3:438465169137:cluster/my-eks-prod
  name: arn:aws:eks:ap-northeast-3:438465169137:cluster/my-eks-prod
- context:
    cluster: arn:aws:eks:ap-northeast-3:438465169137:cluster/julia-eks-monitoring
    user: arn:aws:eks:ap-northeast-3:438465169137:cluster/julia-eks-monitoring
  name: arn:aws:eks:ap-northeast-3:438465169137:cluster/julia-eks-monitoring
current-context: arn:aws:eks:ap-northeast-3:438465169137:cluster/julia-eks-monitoring
kind: Config
preferences: {}
users:
- name: minikube
  user:
    client-certificate: /Users/juliarosschen/.minikube/profiles/minikube/client.crt
    client-key: /Users/juliarosschen/.minikube/profiles/minikube/client.key
- name: user1@julia-eks-monitoring.ap-northeast-3.eksctl.io
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - token
      - -i
      - julia-eks-monitoring
      command: aws-iam-authenticator
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: ap-northeast-3
      provideClusterInfo: false
- name: user1@julia-voting-app-cluster.ap-southeast-2.eksctl.io
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - token
      - -i
      - julia-voting-app-cluster
      command: aws-iam-authenticator
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: ap-southeast-2
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: user1@my-eks-lab.ap-northeast-2.eksctl.io
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - token
      - -i
      - my-eks-lab
      command: aws-iam-authenticator
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: ap-northeast-2
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:ap-northeast-3:438465169137:cluster/my-eks-prod
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - ap-northeast-3
      - eks
      - get-token
      - --cluster-name
      - my-eks-prod
      - --output
      - json
      command: aws
- name: arn:aws:eks:ap-northeast-3:438465169137:cluster/julia-eks-monitoring
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - ap-northeast-3
      - eks
      - get-token
      - --cluster-name
      - julia-eks-monitoring
      - --output
      - json
      command: aws

